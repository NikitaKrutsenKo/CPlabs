// <auto-generated />
using System;
using Lab6.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab6.Migrations
{
    [DbContext(typeof(HospitalManagementDbContext))]
    [Migration("20241117183357_MSSQLmigr")]
    partial class MSSQLmigr
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Lab6.Models.Address", b =>
                {
                    b.Property<int>("Address_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Address_ID"), 1L, 1);

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherAddressDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateProvince")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Address_ID");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Lab6.Models.Hospital", b =>
                {
                    b.Property<int>("Hospital_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Hospital_ID"), 1L, 1);

                    b.Property<int>("Address_ID")
                        .HasColumnType("int");

                    b.Property<string>("HospitalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Hospital_ID");

                    b.HasIndex("Address_ID");

                    b.ToTable("Hospitals");
                });

            modelBuilder.Entity("Lab6.Models.RefTimeOffReason", b =>
                {
                    b.Property<string>("ReasonCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ReasonDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReasonCode");

                    b.ToTable("RefTimeOffReasons");
                });

            modelBuilder.Entity("Lab6.Models.RosterOfStaffOnShift", b =>
                {
                    b.Property<int>("Roster_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Roster_ID"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Shift_ID")
                        .HasColumnType("int");

                    b.Property<int>("Staff_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Roster_ID");

                    b.HasIndex("Shift_ID");

                    b.HasIndex("Staff_ID");

                    b.ToTable("RosterOfStaffOnShifts");
                });

            modelBuilder.Entity("Lab6.Models.Shift", b =>
                {
                    b.Property<int>("Shift_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Shift_ID"), 1L, 1);

                    b.Property<string>("DayOrNight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("OtherShiftDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Shift_ID");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("Lab6.Models.Staff", b =>
                {
                    b.Property<int>("Staff_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Staff_ID"), 1L, 1);

                    b.Property<int>("Address_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateJoinedHospital")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLeftHospital")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Hospital_ID")
                        .HasColumnType("int");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualifications")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Staff_ID");

                    b.HasIndex("Address_ID");

                    b.HasIndex("Hospital_ID");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("Lab6.Models.StaffPay", b =>
                {
                    b.Property<int>("Pay_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pay_ID"), 1L, 1);

                    b.Property<decimal>("Deductions")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GrossPay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetPay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Staff_ID")
                        .HasColumnType("int");

                    b.HasKey("Pay_ID");

                    b.HasIndex("Staff_ID");

                    b.ToTable("StaffPay");
                });

            modelBuilder.Entity("Lab6.Models.StaffTimeOff", b =>
                {
                    b.Property<int>("StaffTimeOff_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffTimeOff_ID"), 1L, 1);

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Staff_ID")
                        .HasColumnType("int");

                    b.HasKey("StaffTimeOff_ID");

                    b.HasIndex("ReasonCode");

                    b.HasIndex("Staff_ID");

                    b.ToTable("StaffTimeOffs");
                });

            modelBuilder.Entity("Lab6.Models.StaffWardAssignment", b =>
                {
                    b.Property<int>("Assignment_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Assignment_ID"), 1L, 1);

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("Staff_ID")
                        .HasColumnType("int");

                    b.Property<int>("Ward_ID")
                        .HasColumnType("int");

                    b.HasKey("Assignment_ID");

                    b.HasIndex("Staff_ID");

                    b.HasIndex("Ward_ID");

                    b.ToTable("StaffWardAssignments");
                });

            modelBuilder.Entity("Lab6.Models.Ward", b =>
                {
                    b.Property<int>("Ward_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ward_ID"), 1L, 1);

                    b.Property<string>("WardDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WardLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Ward_ID");

                    b.ToTable("Wards");
                });

            modelBuilder.Entity("Lab6.Models.Hospital", b =>
                {
                    b.HasOne("Lab6.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("Address_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Lab6.Models.RosterOfStaffOnShift", b =>
                {
                    b.HasOne("Lab6.Models.Shift", "Shift")
                        .WithMany()
                        .HasForeignKey("Shift_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Lab6.Models.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("Staff_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Shift");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Lab6.Models.Staff", b =>
                {
                    b.HasOne("Lab6.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("Address_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Lab6.Models.Hospital", "Hospital")
                        .WithMany()
                        .HasForeignKey("Hospital_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Hospital");
                });

            modelBuilder.Entity("Lab6.Models.StaffPay", b =>
                {
                    b.HasOne("Lab6.Models.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("Staff_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Lab6.Models.StaffTimeOff", b =>
                {
                    b.HasOne("Lab6.Models.RefTimeOffReason", "RefTimeOffReason")
                        .WithMany()
                        .HasForeignKey("ReasonCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Lab6.Models.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("Staff_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RefTimeOffReason");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Lab6.Models.StaffWardAssignment", b =>
                {
                    b.HasOne("Lab6.Models.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("Staff_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Lab6.Models.Ward", "Ward")
                        .WithMany()
                        .HasForeignKey("Ward_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Staff");

                    b.Navigation("Ward");
                });
#pragma warning restore 612, 618
        }
    }
}
